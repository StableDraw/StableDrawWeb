// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StableDraw.SagasService;

#nullable disable

namespace StableDraw.SagasService.Migrations
{
    [DbContext(typeof(SagasDbContext))]
    [Migration("20231012102149_InitProd")]
    partial class InitProd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("StableDraw.SagasService.Sagas.MinIoState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentState")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponseAddress")
                        .HasColumnType("TEXT");

                    b.HasKey("CorrelationId");

                    b.ToTable("MinIoState");
                });

            modelBuilder.Entity("StableDraw.SagasService.Sagas.NeuralState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentState")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponseAddress")
                        .HasColumnType("TEXT");

                    b.HasKey("CorrelationId");

                    b.ToTable("NeuralState");
                });
#pragma warning restore 612, 618
        }
    }
}
