// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StableDraw.Domain.Data.User;

#nullable disable

namespace StableDraw.Domain.Data.User.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20230804094026_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("StableDraw.Core.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ApplicationUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("StableDraw.Core.Models.DTOs.User", b =>
                {
                    b.Property<Guid>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GenerationInfoOid")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDesignAcces")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("SubscriptionInfoOid")
                        .HasColumnType("TEXT");

                    b.HasKey("Oid");

                    b.HasIndex("GenerationInfoOid");

                    b.HasIndex("SubscriptionInfoOid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("StableDraw.Core.Models.GenerationFlow", b =>
                {
                    b.Property<Guid>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Flow")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Oid");

                    b.HasIndex("UserId");

                    b.ToTable("GenerationFlows");
                });

            modelBuilder.Entity("StableDraw.Core.Models.GenerationInfo", b =>
                {
                    b.Property<Guid>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Balance")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateLastUsed")
                        .HasColumnType("TEXT");

                    b.HasKey("Oid");

                    b.ToTable("GenerationInfo");
                });

            modelBuilder.Entity("StableDraw.Core.Models.SubscriptionInfo", b =>
                {
                    b.Property<Guid>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriberId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Oid");

                    b.HasIndex("SubscriberId");

                    b.ToTable("SubscriptionInfo");
                });

            modelBuilder.Entity("StableDraw.Core.Models.Subscriber", b =>
                {
                    b.HasBaseType("StableDraw.Core.Models.ApplicationUser");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Subscriber");
                });

            modelBuilder.Entity("StableDraw.Core.Models.DTOs.User", b =>
                {
                    b.HasOne("StableDraw.Core.Models.GenerationInfo", "GenerationInfo")
                        .WithMany()
                        .HasForeignKey("GenerationInfoOid");

                    b.HasOne("StableDraw.Core.Models.SubscriptionInfo", "SubscriptionInfo")
                        .WithMany()
                        .HasForeignKey("SubscriptionInfoOid");

                    b.Navigation("GenerationInfo");

                    b.Navigation("SubscriptionInfo");
                });

            modelBuilder.Entity("StableDraw.Core.Models.GenerationFlow", b =>
                {
                    b.HasOne("StableDraw.Core.Models.DTOs.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StableDraw.Core.Models.SubscriptionInfo", b =>
                {
                    b.HasOne("StableDraw.Core.Models.Subscriber", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscriber");
                });
#pragma warning restore 612, 618
        }
    }
}
